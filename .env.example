## =============================================================================
## ROBOSYSTEMS ENVIRONMENT CONFIGURATION
## =============================================================================

## =============================================================================
## CORE APPLICATION CONFIGURATION
## =============================================================================

## Environment settings
ENVIRONMENT=dev
LOG_LEVEL=INFO

## Encryption Keys
JWT_SECRET_KEY=your-random-32-byte-base64-encoded-key-here
CONNECTION_CREDENTIALS_KEY=your-random-32-byte-base64-encoded-key-here
GRAPH_BACKUP_ENCRYPTION_KEY=your-backup-encryption-key-here

## Service URLs
ROBOSYSTEMS_API_URL=http://localhost:8000
ROBOSYSTEMS_URL=http://localhost:3000
ROBOLEDGER_URL=http://localhost:3001
ROBOINVESTOR_URL=http://localhost:3002

## JWT Token Configuration (Authentication)
# JWT_ISSUER=api.robosystems.ai
# JWT_AUDIENCE=robosystems.ai,roboledger.ai,roboinvestor.ai

## Server Configuration
# DEBUG=false
# HOST=0.0.0.0
# PORT=8000

## =============================================================================
## FEATURE FLAGS
## =============================================================================

## Core Application Features
USER_REGISTRATION_ENABLED=true
RATE_LIMIT_ENABLED=false
SSE_ENABLED=true
OTEL_ENABLED=false
MCP_AUTO_LIMIT_ENABLED=true
LOAD_SHEDDING_ENABLED=false

## Security and Authentication Features
SECURITY_AUDIT_ENABLED=false
CSP_TRUSTED_TYPES_ENABLED=true
EMAIL_VERIFICATION_ENABLED=false
CAPTCHA_ENABLED=false
CORS_ALLOW_CREDENTIALS=true

## Graph Operations Features
SUBGRAPH_CREATION_ENABLED=true
BACKUP_CREATION_ENABLED=true
AGENT_POST_ENABLED=true

## Graph Infrastructure Features (applies to all backends)
GRAPH_CIRCUIT_BREAKERS_ENABLED=true
GRAPH_REDIS_CACHE_ENABLED=true
GRAPH_RETRY_LOGIC_ENABLED=true
GRAPH_HEALTH_CHECKS_ENABLED=true
SHARED_REPLICA_ALB_ENABLED=false

## Connection Provider Features
CONNECTION_SEC_ENABLED=false
CONNECTION_QUICKBOOKS_ENABLED=false
CONNECTION_PLAID_ENABLED=false

## Billing Features
BILLING_ENABLED=false
BILLING_PREMIUM_PLANS_ENABLED=false

## =============================================================================
## DATABASE CONFIGURATION - POSTGRESQL
## =============================================================================

## PostgreSQL Database
DATABASE_URL=postgresql://postgres:postgres@pg-iam:5432/robosystems
## Docker Compose only - not used by application
POSTGRES_PASSWORD=postgres

## Database Pool Configuration
# DATABASE_POOL_SIZE=20
# DATABASE_MAX_OVERFLOW=40
# DATABASE_POOL_TIMEOUT=30
# DATABASE_POOL_RECYCLE=3600
# DATABASE_ECHO=false

## =============================================================================
## DATABASE CONFIGURATION - GRAPH DATABASES (MULTI-BACKEND)
## =============================================================================

## Graph Backend Selection
## Options: kuzu (Standard tier), neo4j_community (Professional/Enterprise), neo4j_enterprise (Premium)
BACKEND_TYPE=kuzu

## Graph API Configuration (unified access layer for all backends)
GRAPH_API_URL=http://kuzu-api:8001
# GRAPH_API_KEY=your-graph-api-key-here

## Shared Repository Backend (dev/local only)
# Override which backend to use for shared repositories (SEC, etc.) in development
# In AWS environments, this is determined by graph.yml tier configuration
# Options: "kuzu" or "neo4j"
# GRAPH_SHARED_REPOSITORY_BACKEND=kuzu

## Graph API Timeouts and Limits (applies to all backends)
# GRAPH_HTTP_TIMEOUT=30
# GRAPH_QUERY_TIMEOUT=30
# GRAPH_MAX_QUERY_LENGTH=50000
# GRAPH_MAX_REQUEST_SIZE=10485760
# GRAPH_CONNECT_TIMEOUT=5.0
# GRAPH_READ_TIMEOUT=30.0

## Graph Routing and Load Balancing (applies to all backends)
# GRAPH_REPLICA_ALB_URL=
# ALLOW_SHARED_MASTER_READS=true

## Graph Resiliency Configuration (applies to all backends)
# GRAPH_CIRCUIT_BREAKER_THRESHOLD=5
# GRAPH_CIRCUIT_BREAKER_TIMEOUT=60
# GRAPH_ALB_HEALTH_CACHE_TTL=300
# GRAPH_INSTANCE_CACHE_TTL=3600
# GRAPH_HEALTH_CHECK_INTERVAL_MINUTES=5.0

## Graph Backup Configuration (applies to all backends)
# GRAPH_BACKUP_ENCRYPTION_PASSWORD=your-backup-password-here

## User Graph Limits
USER_GRAPHS_DEFAULT_LIMIT=100

## Instance Metadata
# INSTANCE_ID=unknown
# CLUSTER_TIER=standard

## =============================================================================
## KUZU-SPECIFIC CONFIGURATION (when BACKEND_TYPE=kuzu)
## =============================================================================

## Kuzu Database Configuration
KUZU_DATABASE_PATH=./data/kuzu-dbs
KUZU_ACCESS_PATTERN=api_auto
KUZU_NODE_TYPE=writer

## Kuzu Capacity
KUZU_DATABASES_PER_INSTANCE=50
KUZU_MAX_DATABASES_PER_NODE=50

## Kuzu Backup S3 Bucket
# KUZU_S3_BUCKET=robosystems-kuzu-databases-dev

## Kuzu Memory Configuration
# KUZU_MAX_MEMORY_MB=2048
# KUZU_MAX_MEMORY_PER_DB_MB=0

## Kuzu Home Directory
# KUZU_HOME=/app/data/.kuzu

## =============================================================================
## NEO4J-SPECIFIC CONFIGURATION (when BACKEND_TYPE=neo4j_*)
## =============================================================================

## Neo4j Backend Configuration
NEO4J_URI=bolt://neo4j-db:7687
NEO4J_USERNAME=neo4j
NEO4J_PASSWORD=neo4jpassword  # Retrieved from AWS Secrets Manager in prod/staging
NEO4J_ENTERPRISE=false        # Enable multi-database support (requires Enterprise license)

## Neo4j Graph API URL (for development routing)
# NEO4J_API_URL=http://neo4j-api:8002  # Optional: Override default container routing

## Neo4j Connection Pool Configuration
# NEO4J_MAX_CONNECTION_POOL_SIZE=50
# NEO4J_CONNECTION_ACQUISITION_TIMEOUT=60
# NEO4J_MAX_CONNECTION_LIFETIME=3600

## =============================================================================
## MESSAGE QUEUE CONFIGURATION
## =============================================================================

## Valkey/Redis Configuration
VALKEY_URL=redis://valkey:6379
VALKEY_AUTH_TOKEN=valkey
CELERY_BROKER_URL=redis://:valkey@valkey:6379/0
CELERY_RESULT_BACKEND=redis://:valkey@valkey:6379/1

## Worker Configuration
# WORKER_AUTOSCALE=1

## Queue Names
# QUEUE_DEFAULT=default
# QUEUE_CRITICAL=critical
# QUEUE_SHARED_EXTRACTION=shared-extraction
# QUEUE_SHARED_PROCESSING=shared-processing
# QUEUE_SHARED_INGESTION=shared-ingestion
# QUEUE_DATA_SYNC=default
# QUEUE_ANALYTICS=default

## Celery Task Configuration
# CELERY_TASK_TIME_LIMIT=7200
# CELERY_TASK_SOFT_TIME_LIMIT=6900
# CELERY_WORKER_PREFETCH_MULTIPLIER=0
# CELERY_TASK_RETRY_DELAY=60
# CELERY_TASK_MAX_RETRIES=3
# CELERY_RESULT_EXPIRES=3600

## Cache TTLs
# CREDIT_BALANCE_CACHE_TTL=300
# CREDIT_SUMMARY_CACHE_TTL=600
# CREDIT_OPERATION_COST_CACHE_TTL=3600
# JWT_CACHE_TTL=1800
# API_KEY_CACHE_TTL=300

## =============================================================================
## PERFORMANCE AND SCALING
## =============================================================================

## Query Queue Configuration
# QUERY_QUEUE_MAX_SIZE=100
# QUERY_QUEUE_MAX_CONCURRENT=10

## Admission Control
# ADMISSION_MEMORY_THRESHOLD=0.8
# ADMISSION_CPU_THRESHOLD=0.8
# ADMISSION_QUEUE_THRESHOLD=0.9

## Load Shedding
# LOAD_SHED_START_PRESSURE=0.8
# LOAD_SHED_STOP_PRESSURE=0.6

## SSE (Server-Sent Events)
# MAX_SSE_CONNECTIONS_PER_USER=5
# SSE_QUEUE_SIZE=100
# SSE_MAX_REDIS_FAILURES=3

## MCP (Model Context Protocol)
# MCP_AUTO_LIMIT_ENABLED=true
# MCP_MAX_RESULT_ROWS=1000
# MCP_MAX_RESULT_SIZE_MB=5.0

## =============================================================================
## AWS CONFIGURATION
## =============================================================================

## For development with LocalStack:
AWS_ENDPOINT_URL=http://localstack:4566
AWS_ACCESS_KEY_ID=test
AWS_SECRET_ACCESS_KEY=test

## For production (uncomment and configure):
# AWS_DEFAULT_REGION=us-east-1
# AWS_REGION=us-east-1
# AWS_ACCESS_KEY_ID=your-aws-access-key      # Note: Used directly by boto3, not in env.py
# AWS_SECRET_ACCESS_KEY=your-aws-secret-key  # Note: Used directly by boto3, not in env.py

## S3 Configuration (retrieved via get_secret_value - secrets manager or env var)
# AWS_S3_BUCKET=robosystems-dev
# AWS_S3_PREFIX=robosystems
# AWS_S3_ACCESS_KEY_ID=       # Optional: S3-specific credentials for cross-account access
# AWS_S3_SECRET_ACCESS_KEY=   # Optional: S3-specific credentials for cross-account access

## S3 Buckets for Specific Purposes
# SEC_RAW_BUCKET=robosystems-sec-raw
# SEC_PROCESSED_BUCKET=robosystems-sec-processed
# PUBLIC_DATA_BUCKET=robosystems-public-data
# PUBLIC_DATA_CDN_URL=

## =============================================================================
## EXTERNAL SERVICE API KEYS
## =============================================================================

## Anthropic Claude (for AI features)
ANTHROPIC_API_KEY=sk-ant-api03-your-anthropic-api-key-here
# ANTHROPIC_MODEL=claude-sonnet-4-20250514

## QuickBooks (for accounting integration)
INTUIT_CLIENT_ID=your-intuit-client-id-here
INTUIT_CLIENT_SECRET=your-intuit-client-secret-here
INTUIT_ENVIRONMENT=sandbox
INTUIT_REDIRECT_URI=http://localhost:8000/auth/callback
# QUICKBOOKS_SANDBOX=true

## Plaid (for banking integration)
PLAID_CLIENT_ID=your-plaid-client-id-here
PLAID_CLIENT_SECRET=your-plaid-client-secret-here
# PLAID_ENVIRONMENT=sandbox

## SEC.gov Configuration
# SEC_GOV_USER_AGENT="ExampleUserAgent example@example.com"
# SEC_MAX_CONCURRENT_DOWNLOADS=5
# SEC_VALIDATE_CIK=true
# SEC_PIPELINE_PARTIAL_TOLERANCE=true
# SEC_PIPELINE_CLEANUP_TEMP_FILES=true

## OpenFIGI (financial identifiers)
# OPENFIGI_API_KEY=

## Cloudflare Turnstile (CAPTCHA)
# TURNSTILE_SECRET_KEY=
# TURNSTILE_SITE_KEY=

## =============================================================================
## XBRL AND ARELLE CONFIGURATION
## =============================================================================

## Arelle (XBRL processing)
# ARELLE_LOG_FILE=logToBuffer
# ARELLE_TIMEOUT=30
# ARELLE_WORK_OFFLINE=false

## XBRL Processing
# XBRL_EXTERNALIZE_LARGE_VALUES=true
# XBRL_STANDARDIZED_FILENAMES=false
# XBRL_TYPE_PREFIXES=false
# XBRL_COLUMN_STANDARDIZATION=false

## =============================================================================
## OBSERVABILITY
## =============================================================================

## OpenTelemetry Configuration
# OTEL_SERVICE_NAME=robosystems-service
# OTEL_EXPORTER_OTLP_ENDPOINT=http://localhost:4317
# OTEL_RESOURCE_ATTRIBUTES=
# OTEL_CONSOLE_EXPORT=false
