# Graph Database Deployment Configuration
# This file defines all graph database writer configurations for both environments
# Supports multiple backends: Kuzu (standard tier), Neo4j (enterprise/premium tiers)

production:
  writers:
    - name: standard
      description: Standard tier for most customers (Kuzu backend)
      backend: kuzu
      stack_suffix: Standard
      tier: standard
      max_subgraphs: 0 # Standard tier does not support subgraphs
      storage_limit_gb: 500 # 500 GB storage limit
      monthly_credits: 10000 # 10K AI credits per month
      rate_limit_multiplier: 1.0 # Base rate limits
      instance:
        type: r7g.large
        databases_per_instance: 10
        # Kuzu-specific settings
        max_memory_mb: 14336 # 14GB for r7g.large (16GB total - 2GB OS)
        memory_per_db_mb: 2048 # 2GB per database (intentional oversubscription: 10 DBs Ã— 2GB = 20GB on 14GB instance)
        chunk_size: 1000
        query_timeout: 30
        max_query_length: 10000
        ingestion_batch_size: 1000
        connection_pool_size: 10
      scaling:
        min: 1
        max: 10
      deployment:
        enable_var: STANDARD_ENABLED_PROD
        enabled_default: true
        always_enabled: true # Standard tier must always be available

    - name: enterprise
      description: Enterprise tier with isolated resources (Neo4j Community Edition)
      backend: neo4j
      stack_suffix: Enterprise
      tier: enterprise
      max_subgraphs: 10 # Enterprise tier supports up to 10 subgraphs
      storage_limit_gb: 2000 # 2 TB storage limit
      monthly_credits: 50000 # 50K AI credits per month
      rate_limit_multiplier: 2.0 # 2x rate limits
      instance:
        type: r7g.large
        databases_per_instance: 1 # Dedicated instance per customer
        # Neo4j-specific settings
        neo4j_version: "5.15.0"
        neo4j_edition: "community"
        query_timeout: 120
        max_query_length: 50000
        ingestion_batch_size: 5000
        connection_pool_size: 50
      scaling:
        min: 0
        max: 5
      deployment:
        enable_var: ENTERPRISE_ENABLED_PROD
        enabled_default: false

    - name: premium
      description: Premium tier with maximum performance (Neo4j Enterprise Edition)
      backend: neo4j
      stack_suffix: Premium
      tier: premium
      max_subgraphs: null # Premium tier supports unlimited subgraphs
      storage_limit_gb: 10000 # 10 TB storage limit
      monthly_credits: 200000 # 200K AI credits per month
      rate_limit_multiplier: 5.0 # 5x rate limits
      instance:
        type: r7g.xlarge
        databases_per_instance: 1 # Dedicated instance per customer
        # Neo4j-specific settings
        neo4j_version: "5.15.0"
        neo4j_edition: "enterprise"
        query_timeout: 300
        max_query_length: 100000
        ingestion_batch_size: 10000
        connection_pool_size: 100
      scaling:
        min: 0
        max: 3
      deployment:
        enable_var: PREMIUM_ENABLED_PROD
        enabled_default: false

    - name: shared
      description: Shared repositories for public data (SEC, industry, economic)
      backend: neo4j # Currently using Neo4j - can be switched to kuzu by changing this line
      stack_suffix: Shared
      tier: shared
      shared_repositories: "sec" # Comma-separated list of shared repositories
      storage_limit_gb: 5000 # 5 TB storage for shared public data
      instance:
        type: r7g.large
        databases_per_instance: 3 # Multiple shared repositories per instance
        # Neo4j-specific settings
        neo4j_version: "5.15.0"
        neo4j_edition: "community"
        query_timeout: 300 # Longer timeout for complex analytical queries
        max_query_length: 100000
        ingestion_batch_size: 10000 # Large batch size for bulk data loading
        connection_pool_size: 100 # High connection pool for many concurrent readers
      scaling:
        min: 1
        max: 3
      deployment:
        enable_var: SHARED_ENABLED_PROD
        enabled_default: false

staging:
  writers:
    - name: standard
      description: Standard tier for staging (Kuzu backend)
      backend: kuzu
      stack_suffix: Standard
      tier: standard
      max_subgraphs: 0 # Standard tier does not support subgraphs
      storage_limit_gb: 100 # 100 GB storage limit (reduced for staging)
      monthly_credits: 5000 # 5K AI credits per month (reduced for staging)
      rate_limit_multiplier: 1.0 # Base rate limits
      instance:
        type: r7g.medium
        databases_per_instance: 10
        # Kuzu-specific settings
        max_memory_mb: 7168 # 7GB for r7g.medium (8GB total - 1GB OS)
        memory_per_db_mb: 716 # ~700MB per database
        chunk_size: 750
        query_timeout: 30
        max_query_length: 10000
        ingestion_batch_size: 750
        connection_pool_size: 10
      scaling:
        min: 1
        max: 5
      deployment:
        enable_var: STANDARD_ENABLED_STAGING
        enabled_default: true
        always_enabled: true # Standard tier must always be available

    - name: shared
      description: Shared repositories for public data (SEC, industry, economic)
      backend: neo4j # Currently using Neo4j - can be switched to kuzu by changing this line
      stack_suffix: Shared
      tier: shared
      shared_repositories: "sec" # Comma-separated list of shared repositories
      storage_limit_gb: 1000 # 1 TB storage for staging (reduced from production)
      instance:
        type: r7g.medium
        databases_per_instance: 3 # Multiple shared repositories per instance
        # Neo4j-specific settings
        neo4j_version: "5.15.0"
        neo4j_edition: "community"
        query_timeout: 300 # Longer timeout for complex analytical queries
        max_query_length: 100000
        ingestion_batch_size: 5000 # Smaller batch size for staging
        connection_pool_size: 50 # Smaller connection pool for staging
      scaling:
        min: 1
        max: 2
      deployment:
        enable_var: SHARED_ENABLED_STAGING
        enabled_default: true # Enable by default in staging for testing
