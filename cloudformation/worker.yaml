Description: RoboSystems Worker Service - ECS Fargate
Parameters:
  # Environment
  Environment:
    Type: String
    Default: prod
    AllowedValues:
      - prod
      - staging
    Description: Environment name (prod or staging)
    ConstraintDescription: Must be prod or staging

  # Infrastructure & Networking
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: VPC ID for ECS tasks
  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: Private subnet IDs for ECS tasks (comma-separated)

  # Container & Application Configuration
  ECRRepositoryUrl:
    Type: String
    Description: Full ECR repository URL (e.g., 123456789.dkr.ecr.us-east-1.amazonaws.com/robosystems)
  ECRImageTag:
    Type: String
    Description: Docker image tag
    Default: latest
    ConstraintDescription: Must be a valid Docker image tag

  # ECS & Compute Configuration
  DesiredCount:
    Type: Number
    Default: 1
    MinValue: 0
    MaxValue: 100
    Description: Desired number of ECS tasks
  Cpu:
    Type: String
    Default: "512"
    Description: CPU units for ECS task (256 = 0.25 vCPU, 512 = 0.5 vCPU)
    AllowedValues:
      - "256"
      - "512"
      - "1024"
      - "2048"
  Memory:
    Type: String
    Default: "1024"
    Description: Memory in MiB for ECS task
    AllowedValues:
      - "512"
      - "1024"
      - "2048"
      - "3072"
      - "4096"
  FargateWeight:
    Type: Number
    Default: 20
    MinValue: 0
    MaxValue: 100
    Description: Weight for FARGATE capacity provider (On-Demand instances)
  FargateSpotWeight:
    Type: Number
    Default: 80
    MinValue: 0
    MaxValue: 100
    Description: Weight for FARGATE_SPOT capacity provider (Spot instances)

  # Auto-scaling Configuration
  MinCapacity:
    Type: Number
    Default: 1
    MinValue: 1
    MaxValue: 100
    Description: Minimum number of tasks for auto scaling
  MaxCapacity:
    Type: Number
    Default: 30
    MinValue: 1
    MaxValue: 100
    Description: Maximum number of tasks for auto scaling
  CPUScaleIn:
    Type: Number
    Default: 10
    MinValue: 1
    MaxValue: 100
    Description: CPU utilization threshold for scale-in (%). Scale-in occurs below this value
  WorkerQueueCloudWatchNamespace:
    Type: String
    Default: RoboSystemsCelery
    Description: Worker queue monitoring CloudWatch namespace for metrics
    ConstraintDescription: Must be a valid CloudWatch namespace
  QueueMetricName:
    Type: String
    Default: QueueSize
    Description: CloudWatch metric name for queue size monitoring
    ConstraintDescription: Must be a valid CloudWatch metric name

  # Queue-Based Scaling Configuration
  QueueScaleOutThreshold:
    Type: Number
    Default: 100
    MinValue: 1
    MaxValue: 10000
    Description: Queue size threshold to trigger scale-out
  QueueScaleOutCooldown:
    Type: Number
    Default: 180
    MinValue: 60
    MaxValue: 900
    Description: Cooldown period in seconds after scale-out
  QueueScaleOutEvaluationPeriods:
    Type: Number
    Default: 2
    MinValue: 1
    MaxValue: 10
    Description: Number of periods queue must exceed threshold for scale-out
  # CPU-Based Scale-In Configuration (prevents killing active workers)
  CPUScaleInCooldown:
    Type: Number
    Default: 60
    MinValue: 60
    MaxValue: 1800
    Description: Cooldown period in seconds after CPU-based scale-in (ECS scales in one task at a time)

  # Worker Configuration
  WorkerName:
    Type: String
    Description: Worker name identifier (e.g., worker-default, worker-critical)
    Default: worker
    ConstraintDescription: Must be a valid worker name identifier
  WorkerProfile:
    Type: String
    Default: worker
    Description: Worker profile (worker or beat)
    AllowedValues:
      - worker
      - beat
  WorkerQueue:
    Type: String
    Default: default
    Description: Celery queue name for workers
    AllowedValues:
      - default
      - critical
      - shared-extraction
      - shared-processing
      - shared-ingestion
    ConstraintDescription: Must be one of the defined queue names
  WorkerAutoscale:
    Type: Number
    Default: 1
    MinValue: 1
    MaxValue: 4
    Description: Number of worker processes per task
  WorkerPrefetchMultiplier:
    Type: Number
    Default: 0
    MinValue: 0
    MaxValue: 10
    Description: Task prefetch multiplier (0 = disabled for queue-based scaling)

  # Step Scaling Adjustments (Incremental additions based on % of max capacity)
  ScaleStep1Increment:
    Type: Number
    Default: 3
    MinValue: 1
    Description: Tasks to ADD when queue is 0-1x threshold (~10% of max)
  ScaleStep2Increment:
    Type: Number
    Default: 6
    MinValue: 1
    Description: Tasks to ADD when queue is 1-2x threshold (~20% of max)
  ScaleStep3Increment:
    Type: Number
    Default: 9
    MinValue: 1
    Description: Tasks to ADD when queue is 2-3x threshold (~30% of max)
  ScaleStep5Increment:
    Type: Number
    Default: 12
    MinValue: 1
    Description: Tasks to ADD when queue is 3-5x threshold (~40% of max)
  ScaleStep8Increment:
    Type: Number
    Default: 15
    MinValue: 1
    Description: Tasks to ADD when queue is 5-8x threshold (~50% of max)
  ScaleStep13Increment:
    Type: Number
    Default: 20
    MinValue: 1
    Description: Tasks to ADD when queue is 8x+ threshold (~60% of max)

  # Metric Interval Bounds
  # These define the upper bounds for each scaling step, measured as the amount
  # above the QueueScaleOutThreshold. The metric value is (queue_size - threshold).
  # Each interval defines when to trigger the corresponding scaling adjustment
  MetricInterval1Upper:
    Type: Number
    Default: 100
    MinValue: 0
    Description: Upper bound for Step 1 (0 to this value above threshold)
  MetricInterval2Upper:
    Type: Number
    Default: 300
    MinValue: 0
    Description: Upper bound for Step 2 (previous to this value above threshold)
  MetricInterval3Upper:
    Type: Number
    Default: 700
    MinValue: 0
    Description: Upper bound for Step 3 (previous to this value above threshold)
  MetricInterval5Upper:
    Type: Number
    Default: 1500
    MinValue: 0
    Description: Upper bound for Step 5 (previous to this value above threshold)
  MetricInterval8Upper:
    Type: Number
    Default: 3100
    MinValue: 0
    Description: Upper bound for Step 8 (previous to this value above threshold)

  # Observability & Monitoring
  LogRetentionDays:
    Type: Number
    Default: 30
    MinValue: 1
    MaxValue: 365
    Description: CloudWatch log retention in days

  LogRetentionStrategy:
    Type: String
    Default: "standard"
    AllowedValues: ["minimal", "standard", "extended"]
    Description: "Log retention strategy for cost optimization"

  ContainerInsightsEnabled:
    Type: String
    Default: disabled
    AllowedValues:
      - enabled
      - disabled
    Description: Enable/disable ECS Container Insights (adds ~$30-40/month in CloudWatch costs per cluster)

  PrometheusStackName:
    Type: String
    Description: Name of the Prometheus CloudFormation stack for this environment
    Default: ""
    ConstraintDescription: Must be a valid CloudFormation stack name or empty

  SNSAlertEmail:
    Type: String
    Description: Email address for worker alerts
    AllowedPattern: ^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$
    ConstraintDescription: Must be a valid email address

  # Cache Configuration
  ValkeyUrl:
    Type: String
    Description: Valkey ElastiCache endpoint URL from Valkey stack
    AllowedPattern: ^rediss?://.*:[0-9]+$
    ConstraintDescription: Must be a valid Redis URL (redis://host:port or rediss://host:port)

  ValkeyClientSecurityGroupId:
    Type: String
    Description: Security group ID for applications connecting to Valkey
    AllowedPattern: ^sg-[0-9a-f]+$
    ConstraintDescription: Must be a valid security group ID

  # Kuzu Configuration
  KuzuReplicaAlbUrl:
    Type: String
    Default: ""
    Description: ALB endpoint URL for shared repository read replicas
  SharedReplicaAlbEnabled:
    Type: String
    Default: "false"
    AllowedValues:
      - "true"
      - "false"
    Description: Enable routing to shared replica ALB for read operations
  AllowSharedMasterReads:
    Type: String
    Default: "true"
    AllowedValues:
      - "true"
      - "false"
    Description: Allow fallback read operations from shared master when replicas unavailable

  # Tagging Configuration
  ServiceTag:
    Type: String
    Default: RoboSystems
    Description: Service tag for resource identification and billing
  ComponentTag:
    Type: String
    Default: Worker
    Description: Component tag for resource identification and billing

Conditions:
  HasObservabilityStack: !Not [!Equals [!Ref PrometheusStackName, ""]]
  IsProduction: !Equals [!Ref Environment, "prod"]

Mappings:
  LogRetentionPolicies:
    minimal: # Development
      Operational: 3
    standard: # Production
      Operational: 7
    extended: # Compliance
      Operational: 30

Resources:
  # SNS Topic for monitoring alerts
  WorkerAlertTopic:
    Type: AWS::SNS::Topic
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      TopicName: !Sub robosystems-${WorkerName}-${Environment}-alerts
      DisplayName: !Sub RoboSystems ${WorkerName} ${Environment} Alerts
      Subscription:
        - Endpoint: !Ref SNSAlertEmail
          Protocol: email
      Tags:
        - Key: Name
          Value: !Sub robosystems-${WorkerName}-${Environment}-alerts
        - Key: Environment
          Value: !Ref Environment
        - Key: Service
          Value: !Ref ServiceTag
        - Key: Component
          Value: !Ref ComponentTag

  # ECS Cluster
  WorkerCluster:
    Type: AWS::ECS::Cluster
    DeletionPolicy: Delete
    UpdateReplacePolicy: Retain
    Properties:
      ClusterName: !Sub robosystems-${WorkerName}-${Environment}-cluster
      ClusterSettings:
        - Name: containerInsights
          Value: !Ref ContainerInsightsEnabled
      Tags:
        - Key: Name
          Value: !Sub robosystems-${WorkerName}-${Environment}-cluster
        - Key: Environment
          Value: !Ref Environment
        - Key: Service
          Value: !Ref ServiceTag
        - Key: Component
          Value: !Ref ComponentTag
        - Key: CreatedBy
          Value: CloudFormation

  # IAM Resources
  WorkerTaskRole:
    Type: AWS::IAM::Role
    DeletionPolicy: Delete
    UpdateReplacePolicy: Retain
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CloudWatchMetrics
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - cloudwatch:PutMetricData
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"
        - PolicyName: CloudFormationRead
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - cloudformation:DescribeStacks
                Resource: "*"
        - PolicyName: SecretsManagerAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                  - secretsmanager:DescribeSecret
                Resource:
                  # Wildcard access to all environment-specific secrets
                  # Base secret: robosystems/prod or robosystems/staging
                  - !Sub "arn:${AWS::Partition}:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:robosystems/${Environment}-*"
                  # Extension secrets: robosystems/prod/s3, robosystems/prod/postgres, robosystems/prod/kuzu, etc.
                  - !Sub "arn:${AWS::Partition}:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:robosystems/${Environment}/*"
              # KMS permissions for AWS managed keys with service conditions
              - Effect: Allow
                Action:
                  - kms:Decrypt
                  - kms:DescribeKey
                Resource:
                  - !Sub "arn:${AWS::Partition}:kms:${AWS::Region}:${AWS::AccountId}:alias/aws/secretsmanager"
                  - !Sub "arn:${AWS::Partition}:kms:${AWS::Region}:${AWS::AccountId}:alias/aws/ebs"
                  - !Sub "arn:${AWS::Partition}:kms:${AWS::Region}:${AWS::AccountId}:alias/aws/ssm"
                Condition:
                  StringEquals:
                    "kms:ViaService":
                      - !Sub "secretsmanager.${AWS::Region}.amazonaws.com"
                      - !Sub "ec2.${AWS::Region}.amazonaws.com"
                      - !Sub "ssm.${AWS::Region}.amazonaws.com"
        - PolicyName: DynamoDBAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:Scan
                  - dynamodb:Query
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                  - dynamodb:UpdateItem
                  - dynamodb:DeleteItem
                  - dynamodb:BatchGetItem
                  - dynamodb:BatchWriteItem
                  - dynamodb:DescribeTable
                Resource:
                  - !Sub "arn:${AWS::Partition}:dynamodb:${AWS::Region}:${AWS::AccountId}:table/robosystems-kuzu-${Environment}-instance-registry"
                  - !Sub "arn:${AWS::Partition}:dynamodb:${AWS::Region}:${AWS::AccountId}:table/robosystems-kuzu-${Environment}-instance-registry/index/*"
                  - !Sub "arn:${AWS::Partition}:dynamodb:${AWS::Region}:${AWS::AccountId}:table/robosystems-kuzu-${Environment}-volume-registry"
                  - !Sub "arn:${AWS::Partition}:dynamodb:${AWS::Region}:${AWS::AccountId}:table/robosystems-kuzu-${Environment}-volume-registry/index/*"
                  - !Sub "arn:${AWS::Partition}:dynamodb:${AWS::Region}:${AWS::AccountId}:table/robosystems-kuzu-${Environment}-graph-registry"
                  - !Sub "arn:${AWS::Partition}:dynamodb:${AWS::Region}:${AWS::AccountId}:table/robosystems-kuzu-${Environment}-graph-registry/index/*"
        - PolicyName: AutoScalingAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - autoscaling:SetInstanceProtection
                  - autoscaling:DescribeAutoScalingGroups
                Resource: "*"
        - PolicyName: EC2Access
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - ec2:DescribeInstances
                Resource: "*"
        - PolicyName: ECSAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - ecs:ListServices
                  - ecs:ListTasks
                  - ecs:DescribeTasks
                  - ecs:UpdateTaskProtection
                Resource:
                  - !Sub "arn:${AWS::Partition}:ecs:${AWS::Region}:${AWS::AccountId}:cluster/robosystems-worker-${Environment}-cluster"
                  - !Sub "arn:${AWS::Partition}:ecs:${AWS::Region}:${AWS::AccountId}:service/robosystems-worker-${Environment}-cluster/*"
                  - !Sub "arn:${AWS::Partition}:ecs:${AWS::Region}:${AWS::AccountId}:task/robosystems-worker-${Environment}-cluster/*"
        - PolicyName: S3Access
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              # Worker needs read/write access to SEC buckets for processing pipeline
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:DeleteObject
                  - s3:ListBucket
                Resource:
                  - !Sub "arn:${AWS::Partition}:s3:::robosystems-sec-raw-${Environment}"
                  - !Sub "arn:${AWS::Partition}:s3:::robosystems-sec-raw-${Environment}/*"
                  - !Sub "arn:${AWS::Partition}:s3:::robosystems-sec-processed-${Environment}"
                  - !Sub "arn:${AWS::Partition}:s3:::robosystems-sec-processed-${Environment}/*"
              # Read/Write access to Kuzu databases for backup/restore operations
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:DeleteObject
                  - s3:ListBucket
                Resource:
                  - !Sub "arn:${AWS::Partition}:s3:::robosystems-kuzu-databases-${Environment}"
                  - !Sub "arn:${AWS::Partition}:s3:::robosystems-kuzu-databases-${Environment}/*"
              # Read-only access to deployment bucket and public data
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:ListBucket
                Resource:
                  - !Sub "arn:${AWS::Partition}:s3:::robosystems-${Environment}-deployment"
                  - !Sub "arn:${AWS::Partition}:s3:::robosystems-${Environment}-deployment/*"
                  - !Sub "arn:${AWS::Partition}:s3:::robosystems-public-data-${Environment}"
                  - !Sub "arn:${AWS::Partition}:s3:::robosystems-public-data-${Environment}/*"
              # Read/Write to main bucket for worker temp files and processing
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:DeleteObject
                  - s3:ListBucket
                Resource:
                  - !Sub "arn:${AWS::Partition}:s3:::robosystems-${Environment}"
                  - !Sub "arn:${AWS::Partition}:s3:::robosystems-${Environment}/*"
        # Amazon Managed Prometheus permissions (only if observability stack is configured)
        - !If
          - HasObservabilityStack
          - PolicyName: PrometheusAccess
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action:
                    - aps:RemoteWrite
                    - aps:QueryMetrics
                    - aps:GetLabels
                    - aps:GetSeries
                    - aps:GetMetricMetadata
                  Resource: !Sub
                    - "${PrometheusWorkspaceArn}"
                    - PrometheusWorkspaceArn:
                        Fn::ImportValue: !Sub "${PrometheusStackName}-PrometheusWorkspaceArn"
          - !Ref AWS::NoValue
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Service
          Value: !Ref ServiceTag
        - Key: Component
          Value: !Ref ComponentTag

  WorkerExecutionRole:
    Type: AWS::IAM::Role
    DeletionPolicy: Delete
    UpdateReplacePolicy: Retain
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - !Sub arn:${AWS::Partition}:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
      Policies:
        - PolicyName: ECRAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchGetImage
                  - ecr:BatchCheckLayerAvailability
                  - ecr:GetAuthorizationToken
                Resource: "*"
        - PolicyName: SecretsManagerAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                  - secretsmanager:DescribeSecret
                Resource:
                  # Wildcard access to all environment-specific secrets
                  # Base secret: robosystems/prod or robosystems/staging
                  - !Sub "arn:${AWS::Partition}:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:robosystems/${Environment}-*"
                  # Extension secrets: robosystems/prod/s3, robosystems/prod/postgres, robosystems/prod/kuzu, etc.
                  - !Sub "arn:${AWS::Partition}:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:robosystems/${Environment}/*"
              # KMS permissions for decrypting secrets during container startup
              - Effect: Allow
                Action:
                  - kms:Decrypt
                  - kms:DescribeKey
                Resource:
                  - !Sub "arn:${AWS::Partition}:kms:${AWS::Region}:${AWS::AccountId}:alias/aws/secretsmanager"
                Condition:
                  StringEquals:
                    "kms:ViaService":
                      - !Sub "secretsmanager.${AWS::Region}.amazonaws.com"
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Service
          Value: !Ref ServiceTag
        - Key: Component
          Value: !Ref ComponentTag

  # Security Group
  WorkerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    DeletionPolicy: Delete
    UpdateReplacePolicy: Retain
    Properties:
      GroupDescription: Security group for Celery worker ECS tasks
      VpcId: !Ref VpcId
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: -1
        - CidrIpv6: "::/0"
          IpProtocol: -1
      Tags:
        - Key: Name
          Value: !Sub sg-robosystems-${WorkerName}-${Environment}
        - Key: Environment
          Value: !Ref Environment
        - Key: Service
          Value: !Ref ServiceTag
        - Key: Component
          Value: !Ref ComponentTag
        - Key: CreatedBy
          Value: CloudFormation

  # CloudWatch Log Group
  WorkerLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Delete
    UpdateReplacePolicy: Retain
    Properties:
      LogGroupName: !Sub /robosystems/${Environment}/${WorkerName}
      RetentionInDays: !If
        - IsProduction
        - !FindInMap [
            LogRetentionPolicies,
            !Ref LogRetentionStrategy,
            Operational,
          ]
        - !Ref LogRetentionDays
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Service
          Value: !Ref ServiceTag
        - Key: Component
          Value: !Ref ComponentTag

  # ECS Task Definition
  WorkerTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    DeletionPolicy: Delete
    UpdateReplacePolicy: Retain
    Properties:
      Family: !Sub robosystems-${WorkerName}-${Environment}
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      RuntimePlatform:
        CpuArchitecture: ARM64
        OperatingSystemFamily: LINUX
      Cpu: !Ref Cpu
      Memory: !Ref Memory
      ExecutionRoleArn: !GetAtt WorkerExecutionRole.Arn
      TaskRoleArn: !GetAtt WorkerTaskRole.Arn
      ContainerDefinitions:
        - Name: !Sub robosystems-${WorkerName}
          Image: !Sub ${ECRRepositoryUrl}:${ECRImageTag}
          Essential: true
          StopTimeout: 120 # Workers need time for task completion (2 minutes - Fargate max)
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref WorkerLogGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: worker
          Environment:
            # Basic Environment Configuration
            - Name: ENVIRONMENT
              Value: !Ref Environment
            - Name: LOG_LEVEL
              Value: INFO
            - Name: DOCKER_PROFILE
              Value: !Ref WorkerProfile
            # AWS & Container Configuration
            - Name: AWS_REGION
              Value: !Ref AWS::Region
            # Kuzu Routing Configuration (for enhanced client factory)
            - Name: KUZU_REPLICA_ALB_URL
              Value: !Ref KuzuReplicaAlbUrl
            - Name: SHARED_REPLICA_ALB_ENABLED
              Value: !Ref SharedReplicaAlbEnabled
            - Name: ALLOW_SHARED_MASTER_READS
              Value: !Ref AllowSharedMasterReads
            # Cache & Message Queue Configuration
            - Name: VALKEY_URL
              Value: !Ref ValkeyUrl
            # Worker Configuration
            - Name: WORKER_AUTOSCALE
              Value: !Ref WorkerAutoscale
            - Name: WORKER_QUEUE
              Value: !Ref WorkerQueue
            - Name: WORKER_PREFETCH_MULTIPLIER
              Value: !Ref WorkerPrefetchMultiplier
            # SSE Configuration (for worker SSE event emission)
            - Name: SECURITY_AUDIT_ENABLED
              Value: !If [IsProduction, "true", "false"]
          # Secrets are fetched directly by the application using secrets_manager.py
          # The container has IAM permissions to access robosystems/{env}/* secrets
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Service
          Value: !Ref ServiceTag
        - Key: Component
          Value: !Ref ComponentTag

  # ECS Service
  WorkerService:
    Type: AWS::ECS::Service
    DeletionPolicy: Delete
    UpdateReplacePolicy: Retain
    Properties:
      ServiceName: !Sub robosystems-${WorkerName}-${Environment}-service
      Cluster: !Ref WorkerCluster
      TaskDefinition: !Ref WorkerTaskDefinition
      DesiredCount: !Ref DesiredCount
      CapacityProviderStrategy:
        - CapacityProvider: FARGATE_SPOT
          Weight: !Ref FargateSpotWeight
        - CapacityProvider: FARGATE
          Weight: !Ref FargateWeight
      NetworkConfiguration:
        AwsvpcConfiguration:
          SecurityGroups:
            - !Ref WorkerSecurityGroup
            - !Ref ValkeyClientSecurityGroupId
          Subnets: !Ref SubnetIds
          AssignPublicIp: DISABLED
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 50
        DeploymentCircuitBreaker:
          Enable: true
          Rollback: true
      EnableExecuteCommand: true
      PropagateTags: SERVICE
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Service
          Value: !Ref ServiceTag
        - Key: Component
          Value: !Ref ComponentTag
        - Key: CreatedBy
          Value: CloudFormation

  # Application Auto Scaling Target
  WorkerScalingTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    DependsOn: WorkerService
    Properties:
      ServiceNamespace: ecs
      ResourceId: !Sub service/robosystems-${WorkerName}-${Environment}-cluster/robosystems-${WorkerName}-${Environment}-service
      ScalableDimension: ecs:service:DesiredCount
      MinCapacity: !Ref MinCapacity
      MaxCapacity: !Ref MaxCapacity
      RoleARN: !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService

  # CPU-Based Scale-In Policy (Step Scaling)
  # Only scales in when CPU is consistently low, preventing premature scale-in during queue processing
  CPUScaleInPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Properties:
      PolicyName: !Sub ${AWS::StackName}-cpu-scale-in-policy
      PolicyType: StepScaling
      ScalingTargetId: !Ref WorkerScalingTarget
      StepScalingPolicyConfiguration:
        AdjustmentType: ChangeInCapacity
        Cooldown: !Ref CPUScaleInCooldown
        MetricAggregationType: Average
        StepAdjustments:
          # Scale in by 1 task when CPU is below 10%
          - MetricIntervalUpperBound: 0
            ScalingAdjustment: -1

  # Queue Size Scale Out Policy (Step Scaling - Scale Out Only)
  QueueSizeScaleOutPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Properties:
      PolicyName: !Sub ${AWS::StackName}-queue-scale-out-policy
      PolicyType: StepScaling
      ScalingTargetId: !Ref WorkerScalingTarget
      StepScalingPolicyConfiguration:
        AdjustmentType: ChangeInCapacity # Add tasks incrementally (scale-out only)
        Cooldown: !Ref QueueScaleOutCooldown
        MetricAggregationType: Maximum # Use maximum queue depth in the period
        StepAdjustments:
          # Aggressive incremental scaling to reach max capacity
          # Uses percentage of max capacity for each step to ensure we can reach the limit
          # Example: For max_capacity=30, these add roughly: 3, 6, 9, 12, 15, 20 tasks

          # Step 1: Queue just over threshold - add 10% of max capacity
          - MetricIntervalLowerBound: 0
            MetricIntervalUpperBound: !Ref MetricInterval1Upper
            ScalingAdjustment: !Ref ScaleStep1Increment

          # Step 2: Queue moderately above threshold - add 20% of max capacity
          - MetricIntervalLowerBound: !Ref MetricInterval1Upper
            MetricIntervalUpperBound: !Ref MetricInterval2Upper
            ScalingAdjustment: !Ref ScaleStep2Increment

          # Step 3: Queue significantly above threshold - add 30% of max capacity
          - MetricIntervalLowerBound: !Ref MetricInterval2Upper
            MetricIntervalUpperBound: !Ref MetricInterval3Upper
            ScalingAdjustment: !Ref ScaleStep3Increment

          # Step 5: Queue heavily loaded - add 40% of max capacity
          - MetricIntervalLowerBound: !Ref MetricInterval3Upper
            MetricIntervalUpperBound: !Ref MetricInterval5Upper
            ScalingAdjustment: !Ref ScaleStep5Increment

          # Step 8: Queue critically loaded - add 50% of max capacity
          - MetricIntervalLowerBound: !Ref MetricInterval5Upper
            MetricIntervalUpperBound: !Ref MetricInterval8Upper
            ScalingAdjustment: !Ref ScaleStep8Increment

          # Step 13: Queue at maximum - add 60% of max capacity (ensure we hit max)
          - MetricIntervalLowerBound: !Ref MetricInterval8Upper
            ScalingAdjustment: !Ref ScaleStep13Increment

  # Low CPU Utilization Alarm (for scale-in)
  LowCPUAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub robosystems-${WorkerName}-${Environment}-low-cpu
      AlarmDescription: !Sub Trigger scale-in when CPU is consistently below ${CPUScaleIn}%
      MetricName: CPUUtilization
      Namespace: AWS/ECS
      Dimensions:
        - Name: ServiceName
          Value: !Sub robosystems-${WorkerName}-${Environment}-service
        - Name: ClusterName
          Value: !Sub robosystems-${WorkerName}-${Environment}-cluster
      Statistic: Average
      Period: 300 # 5 minutes
      EvaluationPeriods: 3 # 15 minutes of low CPU
      DatapointsToAlarm: 3 # All datapoints must be below threshold
      Threshold: !Ref CPUScaleIn
      ComparisonOperator: LessThanThreshold
      TreatMissingData: notBreaching # Don't scale in if metrics are missing
      AlarmActions:
        - !Ref CPUScaleInPolicy
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Service
          Value: !Ref ServiceTag
        - Key: Component
          Value: !Ref ComponentTag

  # High Queue Size Alarm
  HighQueueSizeAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub robosystems-${WorkerName}-${Environment}-high-queue
      AlarmDescription: !Sub Alarm when ${WorkerQueue} queue size is high (>100)
      MetricName: !Ref QueueMetricName
      Namespace: !Ref WorkerQueueCloudWatchNamespace
      Dimensions:
        - Name: Queue
          Value: !Ref WorkerQueue
        - Name: Environment
          Value: !Ref Environment
      Statistic: Maximum # Changed from Average to catch queue spikes
      Period: 60 # Reduced from 300 to 60 seconds for faster response
      EvaluationPeriods: !Ref QueueScaleOutEvaluationPeriods
      DatapointsToAlarm: !Ref QueueScaleOutEvaluationPeriods # All datapoints must breach
      Threshold: !Ref QueueScaleOutThreshold
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching # Don't scale up if metrics are missing
      AlarmActions:
        - !Ref QueueSizeScaleOutPolicy
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Service
          Value: !Ref ServiceTag
        - Key: Component
          Value: !Ref ComponentTag

  # DLQ Size Warning Alarm
  DLQSizeWarningAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub robosystems-${WorkerName}-${Environment}-dlq-warning
      AlarmDescription: Dead Letter Queue has failed tasks (warning threshold)
      MetricName: DLQSize
      Namespace: RoboSystemsCelery
      Dimensions:
        - Name: Queue
          Value: dead_letter
        - Name: Environment
          Value: !Ref Environment
      Statistic: Average
      Period: 300
      EvaluationPeriods: 2
      Threshold: 10
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching
      AlarmActions:
        - !Ref WorkerAlertTopic
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Service
          Value: !Ref ServiceTag
        - Key: Component
          Value: !Ref ComponentTag

  # DLQ Size Critical Alarm
  DLQSizeCriticalAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub robosystems-${WorkerName}-${Environment}-dlq-critical
      AlarmDescription: Dead Letter Queue has many failed tasks (critical threshold)
      MetricName: DLQSize
      Namespace: RoboSystemsCelery
      Dimensions:
        - Name: Queue
          Value: dead_letter
        - Name: Environment
          Value: !Ref Environment
      Statistic: Average
      Period: 300
      EvaluationPeriods: 1
      Threshold: 50
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching
      AlarmActions:
        - !Ref WorkerAlertTopic
      OKActions:
        - !Ref WorkerAlertTopic
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Service
          Value: !Ref ServiceTag
        - Key: Component
          Value: !Ref ComponentTag

  # DLQ Status Alarm
  DLQStatusAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub robosystems-${WorkerName}-${Environment}-dlq-status-critical
      AlarmDescription: Dead Letter Queue status is critical
      MetricName: DLQStatus
      Namespace: RoboSystemsCelery
      Dimensions:
        - Name: Queue
          Value: dead_letter
        - Name: Environment
          Value: !Ref Environment
      Statistic: Maximum
      Period: 300
      EvaluationPeriods: 2
      Threshold: 1.5
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching
      AlarmActions:
        - !Ref WorkerAlertTopic
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Service
          Value: !Ref ServiceTag
        - Key: Component
          Value: !Ref ComponentTag

  # High CPU Usage Alarm (monitoring only, no scaling action)
  HighCPUUsageAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub robosystems-${WorkerName}-${Environment}-high-cpu-usage
      AlarmDescription: Alert when CPU usage is critically high (>90%)
      MetricName: CPUUtilization
      Namespace: AWS/ECS
      Dimensions:
        - Name: ServiceName
          Value: !Sub robosystems-${WorkerName}-${Environment}-service
        - Name: ClusterName
          Value: !Sub robosystems-${WorkerName}-${Environment}-cluster
      Statistic: Average
      Period: 300 # 5 minutes
      EvaluationPeriods: 3 # 15 minutes of high CPU
      DatapointsToAlarm: 2 # 2 out of 3 datapoints must breach
      Threshold: 90
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching
      AlarmActions:
        - !Ref WorkerAlertTopic
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Service
          Value: !Ref ServiceTag
        - Key: Component
          Value: !Ref ComponentTag

  # High Memory Usage Alarm (monitoring only, no scaling action)
  HighMemoryUsageAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub robosystems-${WorkerName}-${Environment}-high-memory-usage
      AlarmDescription: Alert when memory usage is critically high (>90%)
      MetricName: MemoryUtilization
      Namespace: AWS/ECS
      Dimensions:
        - Name: ServiceName
          Value: !Sub robosystems-${WorkerName}-${Environment}-service
        - Name: ClusterName
          Value: !Sub robosystems-${WorkerName}-${Environment}-cluster
      Statistic: Average
      Period: 300 # 5 minutes
      EvaluationPeriods: 2 # 10 minutes of high memory
      DatapointsToAlarm: 2 # All datapoints must breach
      Threshold: 90
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching
      AlarmActions:
        - !Ref WorkerAlertTopic
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Service
          Value: !Ref ServiceTag
        - Key: Component
          Value: !Ref ComponentTag

  # Queue Metrics Stale Alarm - Alerts when queue metrics stop being published
  QueueMetricsStaleAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub robosystems-${WorkerName}-${Environment}-queue-metrics-stale
      AlarmDescription: !Sub Alert when queue metrics for ${WorkerQueue} haven't been updated
      MetricName: !Ref QueueMetricName
      Namespace: !Ref WorkerQueueCloudWatchNamespace
      Dimensions:
        - Name: Queue
          Value: !Ref WorkerQueue
        - Name: Environment
          Value: !Ref Environment
      Statistic: SampleCount
      Period: 300 # 5 minutes
      EvaluationPeriods: 2 # 10 minutes total
      Threshold: 1
      ComparisonOperator: LessThanThreshold
      TreatMissingData: breaching # Alert if no metrics
      AlarmActions:
        - !Ref WorkerAlertTopic
      OKActions:
        - !Ref WorkerAlertTopic
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Service
          Value: !Ref ServiceTag
        - Key: Component
          Value: !Ref ComponentTag

  # Queue Monitor Latency Alarm - Alerts when queue monitoring is slow
  QueueMonitorLatencyAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub robosystems-${WorkerName}-${Environment}-queue-monitor-latency
      AlarmDescription: Alert when queue monitoring task is taking too long
      MetricName: QueueMonitorLatency
      Namespace: !Ref WorkerQueueCloudWatchNamespace
      Dimensions:
        - Name: Environment
          Value: !Ref Environment
      Statistic: Average
      Period: 300 # 5 minutes
      EvaluationPeriods: 3 # 15 minutes
      Threshold: 10 # 10 seconds
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching # Don't alert if latency metric is missing
      AlarmActions:
        - !Ref WorkerAlertTopic
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Service
          Value: !Ref ServiceTag
        - Key: Component
          Value: !Ref ComponentTag

Outputs:
  WorkerClusterName:
    Description: Name of the ECS Cluster
    Value: !Ref WorkerCluster
    Export:
      Name: !Sub ${AWS::StackName}-${Environment}-WorkerClusterName

  WorkerServiceName:
    Description: Name of the ECS Service
    Value: !GetAtt WorkerService.Name
    Export:
      Name: !Sub ${AWS::StackName}-${Environment}-WorkerServiceName

  WorkerTaskDefinitionArn:
    Description: ARN of the Task Definition
    Value: !Ref WorkerTaskDefinition
    Export:
      Name: !Sub ${AWS::StackName}-${Environment}-WorkerTaskDefinitionArn

  WorkerSecurityGroupId:
    Description: ID of the Worker Security Group
    Value: !Ref WorkerSecurityGroup
    Export:
      Name: !Sub ${AWS::StackName}-${Environment}-WorkerSecurityGroupId

  WorkerLogGroupName:
    Description: Name of the CloudWatch Log Group
    Value: !Ref WorkerLogGroup
    Export:
      Name: !Sub ${AWS::StackName}-${Environment}-WorkerLogGroupName

  ECRRepositoryUsed:
    Description: ECR Repository used for Docker images
    Value: !Ref ECRRepositoryUrl
    Export:
      Name: !Sub ${AWS::StackName}-${Environment}-ECRRepositoryUsed

  WorkerTaskRoleArn:
    Description: ARN of the ECS task role
    Value: !GetAtt WorkerTaskRole.Arn
    Export:
      Name: !Sub ${AWS::StackName}-${Environment}-WorkerTaskRoleArn

  WorkerExecutionRoleArn:
    Description: ARN of the ECS execution role
    Value: !GetAtt WorkerExecutionRole.Arn
    Export:
      Name: !Sub ${AWS::StackName}-${Environment}-WorkerExecutionRoleArn

  WorkerEnvironment:
    Description: Deployment environment
    Value: !Ref Environment
    Export:
      Name: !Sub ${AWS::StackName}-${Environment}-WorkerEnvironment

  WorkerCPUScaleIn:
    Description: CPU threshold for scale-in
    Value: !Ref CPUScaleIn
    Export:
      Name: !Sub ${AWS::StackName}-${Environment}-WorkerCPUScaleIn

  QueueSizeScaleOutPolicyArn:
    Description: ARN of the Queue Size scale out policy
    Value: !Ref QueueSizeScaleOutPolicy
    Export:
      Name: !Sub ${AWS::StackName}-${Environment}-QueueSizeScaleOutPolicyArn

  HighQueueSizeAlarmName:
    Description: Name of the high queue size alarm
    Value: !Ref HighQueueSizeAlarm
    Export:
      Name: !Sub ${AWS::StackName}-${Environment}-HighQueueSizeAlarmName
